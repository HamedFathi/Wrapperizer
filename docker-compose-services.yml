version: '3.7'

services:
  sd:
    build:
      context: .
      dockerfile: docker/services/sd.Dockerfile
    networks:
      - "wrapperizer"
    ports:
      - 3090:80
    environment:
      ASPNETCORE_URLS: "http://*:80" # this should be named for service discover registration
      ASPNETCORE_ENVIRONMENT: "Docker"
    restart: unless-stopped
    depends_on:
      - consul
  api: 
    build:
      context: .
      dockerfile: docker/services/api.Dockerfile
    networks:
      - "wrapperizer"
    environment:
      ASPNETCORE_URLS: "http://api:80" # this should be named for service discover registration
      ASPNETCORE_ENVIRONMENT: "Docker"
    ports:
    - 3080:80
    restart: unless-stopped
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 2s
#        max_attempts: 3
#        window: 120s
    depends_on:
      - seq
      - consul
      - mongo
      - redis
      - rabbitmq
      - sqlserver
  relay:
    build:
      context: .
      dockerfile: docker/services/relay.Dockerfile
    networks:
      - "wrapperizer"
    restart: unless-stopped
    environment:
      DOTNET_URLS: "http://*:80"
      DOTNET_ENVIRONMENT: "Docker"
    depends_on:
      - seq
      - api
      - rabbitmq
      - sqlserver
  notification:
    build:
      context: .
      dockerfile: docker/services/notification.Dockerfile
    networks:
      - "wrapperizer"
    restart: unless-stopped
    environment:
      DOTNET_URLS: "http://*:80"
      DOTNET_ENVIRONMENT: "Docker"
    depends_on:
      - seq
      - rabbitmq
  health:
    build:
      context: .
      dockerfile: docker/services/health.Dockerfile
    networks:
      - "wrapperizer"
    restart: unless-stopped
    ports:
      - 3081:80
    environment:
      ASPNETCORE_URLS: "http://*:80"
      ASPNETCORE_ENVIRONMENT: "Docker"
    depends_on:
      - api
      - notification
      - relay

networks:
  wrapperizer:
